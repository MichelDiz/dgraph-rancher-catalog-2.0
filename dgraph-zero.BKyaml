apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-mg8ld
  creationTimestamp: null
  generation: 1
  labels:
    workload.user.cattle.io/workloadselector: deployment-default-dgraph
  name: dgraph-zero
  selfLink: /apis/apps/v1beta2/namespaces/default/deployments/dgraph-zero
spec:
  paused: true
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-dgraph
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":5080,"dnsName":"dgraph-nodeport","kind":"NodePort","name":"5080tcp50801","protocol":"TCP","sourcePort":5080},{"containerPort":6080,"dnsName":"dgraph-nodeport","kind":"NodePort","name":"6080tcp60801","protocol":"TCP","sourcePort":6080}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-dgraph
    spec:
      containers:
      - args:
        - dgraph
        - zero
        - --my=zero:5080
        image: dgraph/dgraph:latest
        imagePullPolicy: Always
        name: dgraph-zero
        ports:
        - containerPort: 5080
          name: 5080tcp50801
          protocol: TCP
        - containerPort: 6080
          name: 6080tcp60801
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
